{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport jwtDecode from \"jwt-decode\";\nexport const registration = async (email, password) => {\n  const {\n    data\n  } = await $host.post('api/user/registration', {\n    email,\n    password,\n    role: 'ADMIN'\n  });\n  return jwtDecode(data.token);\n};\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await $host.post('api/user/login', {\n    email,\n    password\n  });\n  return jwtDecode(data.token);\n};\nexport const check = async () => {\n  const response = await $host.post('api/user/registration');\n  return response;\n};","map":{"version":3,"names":["$authHost","$host","jwtDecode","registration","email","password","data","post","role","token","login","check","response"],"sources":["D:/второй сем/barbershop/client/src/http/userAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const registration = async (email, password) => {\r\n    const {data} = await $host.post('api/user/registration', {email, password, role: 'ADMIN'})\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const {data} = await $host.post('api/user/login', {email, password})\r\n    return jwtDecode(data.token)\r\n}\r\n\r\nexport const check = async () => {\r\n    const response = await $host.post('api/user/registration', )\r\n    return response\r\n}"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;AACxC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAK,EAAEC,QAAQ,KAAK;EACnD,MAAM;IAACC;EAAI,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,uBAAuB,EAAE;IAACH,KAAK;IAAEC,QAAQ;IAAEG,IAAI,EAAE;EAAO,CAAC,CAAC;EAC1F,OAAON,SAAS,CAACI,IAAI,CAACG,KAAK,CAAC;AAChC,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,OAAON,KAAK,EAAEC,QAAQ,KAAK;EAC5C,MAAM;IAACC;EAAI,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,gBAAgB,EAAE;IAACH,KAAK;IAAEC;EAAQ,CAAC,CAAC;EACpE,OAAOH,SAAS,CAACI,IAAI,CAACG,KAAK,CAAC;AAChC,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,YAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACM,IAAI,CAAC,uBAAuB,CAAG;EAC5D,OAAOK,QAAQ;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}