{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0432\\u0442\\u043E\\u0440\\u043E\\u0439 \\u0441\\u0435\\u043C\\\\barbershop\\\\client\\\\src\\\\pages\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from '../utils/consts';\nimport styles2 from './Auth.module.css';\nimport { login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    user\n  } = useContext(Context);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n      user.setUser(user);\n      user.setIsAuth(true);\n      navigate(SHOP_ROUTE);\n    } catch (e) {\n      alert(e.data.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles2.loginform,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles2.formtitle,\n      children: isLogin ? 'Авторизация' : 'Регистрация'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles2.formlabel,\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: styles2.forminput,\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles2.formlabel,\n      children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      className: styles2.forminput,\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles2.formbutton,\n      onClick: event => {\n        event.preventDefault();\n        click();\n      },\n      children: isLogin ? 'Войти' : 'Регистрация'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles2.formlabel,\n      children: [\"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?  \", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: REGISTRATION_ROUTE,\n        children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0443\\u0439\\u0441\\u044F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles2.formlabel,\n      children: [\"\\u0415\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?  \", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: LOGIN_ROUTE,\n        children: \"\\u0412\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 14\n  }, this);\n}, \"8Kf+2A9AWiq/vfHlIvEH+BtIbvw=\", false, function () {\n  return [useLocation, useNavigate];\n})), \"8Kf+2A9AWiq/vfHlIvEH+BtIbvw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = Auth;\nexport default Auth;\nvar _c, _c2;\n$RefreshReg$(_c, \"Auth$observer\");\n$RefreshReg$(_c2, \"Auth\");","map":{"version":3,"names":["React","useContext","useState","NavLink","useLocation","useNavigate","LOGIN_ROUTE","REGISTRATION_ROUTE","SHOP_ROUTE","styles2","login","registration","observer","Context","Auth","user","location","navigate","isLogin","pathname","email","setEmail","password","setPassword","click","data","setUser","setIsAuth","e","alert","loginform","formtitle","formlabel","forminput","target","value","formbutton","event","preventDefault"],"sources":["D:/второй сем/barbershop/client/src/pages/Auth.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {NavLink, useLocation, useNavigate} from 'react-router-dom';\r\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from '../utils/consts';\r\nimport styles2 from './Auth.module.css';\r\nimport {login, registration} from \"../http/userAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nconst Auth = observer(() => {\r\n\r\n    const {user}= useContext(Context)\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const isLogin = location.pathname === LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const click = async () => {\r\n        try{\r\n        let data;\r\n      if (isLogin) {\r\n        data = await login(email, password)\r\n      } else {\r\n              data = await registration(email, password)\r\n              }\r\n      user.setUser(user)\r\n        user.setIsAuth(true)\r\n            navigate(SHOP_ROUTE)\r\n    }\r\n        catch (e){\r\n            alert(e.data.data)\r\n        }\r\n    }\r\n\r\n    return (\r\n             <form className={styles2.loginform}>\r\n      <h2 className={styles2.formtitle}>{isLogin ? 'Авторизация': 'Регистрация'}</h2>\r\n      <label  className={styles2.formlabel}>\r\n        Email\r\n      </label>\r\n      <input type=\"email\"\r\n       id=\"email\"\r\n        className={styles2.forminput}\r\n       value={email} \r\n       onChange={e=>setEmail(e.target.value)}\r\n       required />\r\n      <label  className={styles2.formlabel}>\r\n        Пароль\r\n      </label>\r\n      <input type=\"password\"\r\n       id=\"password\" \r\n       className={styles2.forminput}\r\n       value={password} \r\n       onChange={e=>setPassword(e.target.value)}\r\n       required />\r\n      <button type=\"submit\" className={styles2.formbutton} onClick={(event) => {\r\n  event.preventDefault();\r\n  click();\r\n}}>\r\n      {isLogin ? 'Войти': 'Регистрация'}\r\n      </button>\r\n      {isLogin ? \r\n\r\n      <label className={styles2.formlabel}>\r\n      Нет аккаунта?  <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\r\n    </label>:\r\n\r\n      <label className={styles2.formlabel}>\r\n        Есть аккаунт?  <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n      </label>\r\n      }\r\n    </form>\r\n  );\r\n});\r\n\r\n export default Auth"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}